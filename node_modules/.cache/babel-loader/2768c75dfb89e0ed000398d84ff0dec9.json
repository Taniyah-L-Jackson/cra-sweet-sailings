{"ast":null,"code":"import _slicedToArray from\"C:\\\\Sweet_Sailings\\\\cra-sweet-sailings\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from'react';import{useStateValue}from'../cart/gear/state';//Add items to cart\nfunction AddToCart(props){var _useStateValue=useStateValue(),_useStateValue2=_slicedToArray(_useStateValue,2),_useStateValue2$=_useStateValue2[0],cart=_useStateValue2$.cart,count=_useStateValue2$.count,total=_useStateValue2$.total,dispatch=_useStateValue2[1];return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"button\",{style:{height:'60px',width:'40%',borderRadius:'30px',border:'none',fontSize:'20px',fontFamily:'Lob2',background:'#3F2A2D',color:'white'},onClick:function onClick(){var items=cart;var found=false;//used to check if item is new or already in cart\nitems.forEach(function(cartItem){if(cartItem.id===props.id){cartItem.qty+=1;found=true;}});if(!found){items.push({id:props.id,title:props.title,price:props.price,qty:1});}dispatch({type:'changeCart',newCart:items});dispatch({type:'changeCount',newCount:count+1});dispatch({type:'changeTotal',newTotal:total+props.price});}},\"Add to Cart\"));}export default AddToCart;// dispatch calls the reducer method and updates the cart's state","map":{"version":3,"sources":["C:/Sweet_Sailings/cra-sweet-sailings/src/cart/cardAdd.js"],"names":["React","useStateValue","AddToCart","props","cart","count","total","dispatch","height","width","borderRadius","border","fontSize","fontFamily","background","color","items","found","forEach","cartItem","id","qty","push","title","price","type","newCart","newCount","newTotal"],"mappings":"kKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,aAAT,KAA8B,oBAA9B,CAEA;AACA,QAASC,CAAAA,SAAT,CAAmBC,KAAnB,CAA0B,oBACiBF,aAAa,EAD9B,sFAChBG,IADgB,kBAChBA,IADgB,CACVC,KADU,kBACVA,KADU,CACHC,KADG,kBACHA,KADG,CACKC,QADL,oBAGxB,mBACI,qDACI,8BACI,KAAK,CAAE,CAACC,MAAM,CAAE,MAAT,CAAiBC,KAAK,CAAE,KAAxB,CAA+BC,YAAY,CAAE,MAA7C,CAAqDC,MAAM,CAAC,MAA5D,CAAoEC,QAAQ,CAAE,MAA9E,CAAsFC,UAAU,CAAE,MAAlG,CAA0GC,UAAU,CAAE,SAAtH,CAAiIC,KAAK,CAAE,OAAxI,CADX,CAGI,OAAO,CAAE,kBAAM,CACX,GAAIC,CAAAA,KAAK,CAAGZ,IAAZ,CACA,GAAIa,CAAAA,KAAK,CAAG,KAAZ,CAAmB;AAEnBD,KAAK,CAACE,OAAN,CAAc,SAAAC,QAAQ,CAAI,CACtB,GAAIA,QAAQ,CAACC,EAAT,GAAgBjB,KAAK,CAACiB,EAA1B,CAA8B,CAC1BD,QAAQ,CAACE,GAAT,EAAgB,CAAhB,CACAJ,KAAK,CAAG,IAAR,CACH,CACJ,CALD,EAOA,GAAI,CAACA,KAAL,CAAY,CACVD,KAAK,CAACM,IAAN,CAAW,CACPF,EAAE,CAAEjB,KAAK,CAACiB,EADH,CAEPG,KAAK,CAAEpB,KAAK,CAACoB,KAFN,CAGPC,KAAK,CAAErB,KAAK,CAACqB,KAHN,CAIPH,GAAG,CAAE,CAJE,CAAX,EAMD,CAEDd,QAAQ,CAAC,CACLkB,IAAI,CAAE,YADD,CAELC,OAAO,CAAEV,KAFJ,CAAD,CAAR,CAKAT,QAAQ,CAAC,CACPkB,IAAI,CAAE,aADC,CAEPE,QAAQ,CAAEtB,KAAK,CAAG,CAFX,CAAD,CAAR,CAKFE,QAAQ,CAAC,CACLkB,IAAI,CAAE,aADD,CAELG,QAAQ,CAAEtB,KAAK,CAAGH,KAAK,CAACqB,KAFnB,CAAD,CAAR,CAKD,CAtCL,gBADJ,CADJ,CA6CD,CAED,cAAetB,CAAAA,SAAf,CAEA","sourcesContent":["import React from 'react'\r\nimport { useStateValue } from '../cart/gear/state'\r\n\r\n//Add items to cart\r\nfunction AddToCart(props) {\r\n  const [{cart, count, total}, dispatch] = useStateValue()\r\n\r\n  return (\r\n      <>\r\n          <button\r\n              style={{height: '60px', width: '40%', borderRadius: '30px', border:'none', fontSize: '20px', fontFamily: 'Lob2', background: '#3F2A2D', color: 'white'}}\r\n\r\n              onClick={() => {\r\n                  let items = cart\r\n                  let found = false; //used to check if item is new or already in cart\r\n\r\n                  items.forEach(cartItem => {\r\n                      if (cartItem.id === props.id) {\r\n                          cartItem.qty += 1;\r\n                          found = true;\r\n                      } \r\n                  });\r\n              \r\n                  if (!found) {\r\n                    items.push({\r\n                        id: props.id,\r\n                        title: props.title,\r\n                        price: props.price,\r\n                        qty: 1\r\n                      });\r\n                  }\r\n                  \r\n                  dispatch({\r\n                      type: 'changeCart',\r\n                      newCart: items\r\n                  })\r\n\r\n                  dispatch({\r\n                    type: 'changeCount',\r\n                    newCount: count + 1\r\n                })\r\n\r\n                dispatch({\r\n                    type: 'changeTotal',\r\n                    newTotal: total + props.price\r\n                })\r\n\r\n              }}>\r\n                Add to Cart\r\n          </button>          \r\n      </>\r\n  )\r\n}\r\n\r\nexport default AddToCart\r\n\r\n// dispatch calls the reducer method and updates the cart's state \r\n"]},"metadata":{},"sourceType":"module"}