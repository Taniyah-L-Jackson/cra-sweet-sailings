{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sweet_Sailings\\\\cra-sweet-sailings\\\\src\\\\cart\\\\cartList.js\";\nimport React, { Component } from 'react';\nimport { StateContext } from './gear/state';\n\nfunction Slide(props) {\n  console.log('This is props:' + props);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  });\n}\n\nfunction Empty() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }\n  }, \"Nothing In Cart\")))));\n}\n\nclass ShowCart extends Component {\n  constructor() {\n    super();\n    this.state = {\n      inCart: []\n    };\n  } // fetch database and show info that matches ids in global cart\n\n\n  componentDidMount() {\n    fetch(\"http://localhost:3090/api/product_list/\").then(result => result.json()).then(resultData => {\n      const [{\n        cartItems\n      }] = this.context;\n      console.log(cartItems); // find all items with the corresponding id\n\n      let cartInventory = resultData.filter(item => cartItems.includes(item.id) ? {\n        item\n      } : console.log(false));\n      this.setState({\n        inCart: cartInventory\n      });\n      console.log(cartInventory);\n    });\n  }\n\n  render() {\n    const productSlides = this.state.inCart.map((item, id) => {\n      return /*#__PURE__*/React.createElement(Slide, Object.assign({\n        key: id\n      }, item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 24\n        }\n      }));\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, null, productSlides);\n  }\n\n}\n\nShowCart.contextType = StateContext;\nexport default ShowCart;","map":{"version":3,"sources":["C:/Sweet_Sailings/cra-sweet-sailings/src/cart/cartList.js"],"names":["React","Component","StateContext","Slide","props","console","log","Empty","ShowCart","constructor","state","inCart","componentDidMount","fetch","then","result","json","resultData","cartItems","context","cartInventory","filter","item","includes","id","setState","render","productSlides","map","contextType"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,YAAT,QAA6B,cAA7B;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAClBC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBF,KAA/B;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAYH;;AAED,SAASG,KAAT,GAAiB;AACb,sBACI,uDACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CADJ,CADJ,CADJ,CADJ;AAWH;;AAED,MAAMC,QAAN,SAAuBP,SAAvB,CAAiC;AAG7BQ,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE;AADC,KAAb;AAGH,GAR4B,CAU7B;;;AACAC,EAAAA,iBAAiB,GAAG;AAEhBC,IAAAA,KAAK,CAAC,yCAAD,CAAL,CACKC,IADL,CACUC,MAAM,IAAIA,MAAM,CAACC,IAAP,EADpB,EAEKF,IAFL,CAEUG,UAAU,IAAI;AAEhB,YAAM,CAAC;AAACC,QAAAA;AAAD,OAAD,IAAgB,KAAKC,OAA3B;AACAd,MAAAA,OAAO,CAACC,GAAR,CAAYY,SAAZ,EAHgB,CAIhB;;AACA,UAAIE,aAAa,GAAGH,UAAU,CAACI,MAAX,CAAkBC,IAAI,IAAIJ,SAAS,CAACK,QAAV,CAAmBD,IAAI,CAACE,EAAxB,IAA8B;AAACF,QAAAA;AAAD,OAA9B,GAAuCjB,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAjE,CAApB;AAEA,WAAKmB,QAAL,CAAc;AACVd,QAAAA,MAAM,EAAES;AADE,OAAd;AAGAf,MAAAA,OAAO,CAACC,GAAR,CAAYc,aAAZ;AAEH,KAdL;AAeH;;AAEDM,EAAAA,MAAM,GAAG;AAEL,UAAMC,aAAa,GAAG,KAAKjB,KAAL,CAAWC,MAAX,CAAkBiB,GAAlB,CAAsB,CAACN,IAAD,EAAOE,EAAP,KAAc;AAClD,0BAAO,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAEA;AAAZ,SAAoBF,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACH,KAFiB,CAAtB;AAKA,wBACI,0CACKK,aADL,CADJ;AAKH;;AA1C4B;;AAA3BnB,Q,CAEKqB,W,GAAc3B,Y;AA2CzB,eAAeM,QAAf","sourcesContent":["import React, {Component} from 'react'\r\nimport { StateContext } from './gear/state'\r\n\r\nfunction Slide(props) {\r\n    console.log('This is props:' + props)\r\n    return (\r\n        <div className=\"col-sm-12\">\r\n            {/* <ul>\r\n                <li>\r\n                    <h1>{props.item.title}</h1>\r\n                </li>\r\n                <li>\r\n                    <p>{props.item.price}</p>\r\n                </li>\r\n            </ul> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Empty() {\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12\">\r\n                        <h1>Nothing In Cart</h1>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nclass ShowCart extends Component {\r\n\r\n    static contextType = StateContext;\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            inCart: []\r\n        }\r\n    }\r\n\r\n    // fetch database and show info that matches ids in global cart\r\n    componentDidMount() {\r\n\r\n        fetch(\"http://localhost:3090/api/product_list/\")\r\n            .then(result => result.json())\r\n            .then(resultData => {\r\n\r\n                const [{cartItems}] = this.context;\r\n                console.log(cartItems);\r\n                // find all items with the corresponding id\r\n                let cartInventory = resultData.filter(item => cartItems.includes(item.id) ? {item} : console.log(false))\r\n\r\n                this.setState({\r\n                    inCart: cartInventory\r\n                })\r\n                console.log(cartInventory)\r\n\r\n            })\r\n    }\r\n\r\n    render() {\r\n        \r\n        const productSlides = this.state.inCart.map((item, id) => {\r\n                return <Slide key={id} {...item}/>\r\n            }\r\n        )\r\n\r\n        return (\r\n            <>\r\n                {productSlides}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShowCart\r\n"]},"metadata":{},"sourceType":"module"}