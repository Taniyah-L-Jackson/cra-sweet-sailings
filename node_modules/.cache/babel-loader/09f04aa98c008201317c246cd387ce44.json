{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sweet_Sailings\\\\cra-sweet-sailings\\\\src\\\\cart\\\\cartRemove.js\";\nimport React from 'react';\nimport { useStateValue } from '../cart/gear/state'; //Remove items to cart\n\nfunction RemoveFromCart(props) {\n  const [{\n    cart,\n    count\n  }, dispatch] = useStateValue();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    //   style={props.btnStyle}\n    onClick: () => {\n      let items = cart;\n      items.forEach(cartItem => {\n        if (cartItem.id === Number(props.id)) {\n          cartItem.qty -= 1;\n        }\n\n        if (cartItem.qty === 0) {\n          return items.filter(product => product.qty > 0);\n        }\n      });\n      let updateCount = count - 1;\n\n      if (updateCount === 0) {\n        return updateCount;\n      }\n\n      dispatch({\n        type: 'changeCart',\n        newCart: items\n      });\n      dispatch({\n        type: 'changeCount',\n        newCount: updateCount\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }\n  }, \"-\"));\n}\n\nexport default RemoveFromCart; // dispatch calls the reducer method and updates the cart's state","map":{"version":3,"sources":["C:/Sweet_Sailings/cra-sweet-sailings/src/cart/cartRemove.js"],"names":["React","useStateValue","RemoveFromCart","props","cart","count","dispatch","items","forEach","cartItem","id","Number","qty","filter","product","updateCount","type","newCart","newCount"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,oBAA9B,C,CAEA;;AACA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,QAAM,CAAC;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAD,EAAgBC,QAAhB,IAA4BL,aAAa,EAA/C;AAEA,sBACI,uDACI;AACE;AAEE,IAAA,OAAO,EAAE,MAAM;AACX,UAAIM,KAAK,GAAGH,IAAZ;AAEAG,MAAAA,KAAK,CAACC,OAAN,CAAcC,QAAQ,IAAI;AACtB,YAAIA,QAAQ,CAACC,EAAT,KAAgBC,MAAM,CAACR,KAAK,CAACO,EAAP,CAA1B,EAAsC;AAClCD,UAAAA,QAAQ,CAACG,GAAT,IAAgB,CAAhB;AACH;;AAED,YAAIH,QAAQ,CAACG,GAAT,KAAiB,CAArB,EAAwB;AACpB,iBAAOL,KAAK,CAACM,MAAN,CAAaC,OAAO,IAAIA,OAAO,CAACF,GAAR,GAAc,CAAtC,CAAP;AACH;AACJ,OARD;AAUA,UAAIG,WAAW,GAAGV,KAAK,GAAG,CAA1B;;AACA,UAAIU,WAAW,KAAK,CAApB,EAAuB;AACnB,eAAOA,WAAP;AACH;;AAEDT,MAAAA,QAAQ,CAAC;AACLU,QAAAA,IAAI,EAAE,YADD;AAELC,QAAAA,OAAO,EAAEV;AAFJ,OAAD,CAAR;AAKAD,MAAAA,QAAQ,CAAC;AACPU,QAAAA,IAAI,EAAE,aADC;AAEPE,QAAAA,QAAQ,EAAEH;AAFH,OAAD,CAAR;AAKH,KA/BL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,CADJ;AAuCD;;AAED,eAAeb,cAAf,C,CAEA","sourcesContent":["import React from 'react'\r\nimport { useStateValue } from '../cart/gear/state'\r\n\r\n//Remove items to cart\r\nfunction RemoveFromCart(props) {\r\n  const [{cart, count}, dispatch] = useStateValue()\r\n\r\n  return (\r\n      <>\r\n          <button\r\n            //   style={props.btnStyle}\r\n\r\n              onClick={() => {\r\n                  let items = cart\r\n\r\n                  items.forEach(cartItem => {\r\n                      if (cartItem.id === Number(props.id)) {\r\n                          cartItem.qty -= 1;\r\n                      } \r\n\r\n                      if (cartItem.qty === 0) {\r\n                          return items.filter(product => product.qty > 0)\r\n                      }\r\n                  });\r\n\r\n                  let updateCount = count - 1\r\n                  if (updateCount === 0) {\r\n                      return updateCount\r\n                  }\r\n\r\n                  dispatch({\r\n                      type: 'changeCart',\r\n                      newCart: items\r\n                  })\r\n\r\n                  dispatch({\r\n                    type: 'changeCount',\r\n                    newCount: updateCount,\r\n                })\r\n\r\n              }}>\r\n              -\r\n          </button>\r\n          \r\n      </>\r\n  )\r\n}\r\n\r\nexport default RemoveFromCart\r\n\r\n// dispatch calls the reducer method and updates the cart's state \r\n"]},"metadata":{},"sourceType":"module"}